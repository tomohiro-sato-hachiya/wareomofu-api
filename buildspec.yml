version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo $AWS_DEFAULT_REGION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME
      - sed -ie s/AWS_ACCOUNT_ID/$AWS_ACCOUNT_ID/ taskdef.json
      - sed -ie s/AWS_DEFAULT_REGION/$AWS_DEFAULT_REGION/ taskdef.json
      - sed -ie s/TASK_DF/$TASK_DF/ taskdef.json
      - sed -ie s/REPOSITORY_NAME/$REPOSITORY_NAME/ taskdef.json
      - sed -ie s/IMAGE_TAG/$IMAGE_TAG/ taskdef.json
      - sed -ie s/ECS_TASK_EXEC_ROLE/$ECS_TASK_EXEC_ROLE/ taskdef.json
      - sed -ie s/IAM_USER/$IAM_USER/ taskdef.json
      - sed -ie s!DB_INFO_SECRET_NAME!$DB_INFO_SECRET_NAME! taskdef.json
      - sed -ie s!COGNITO_INFO_SECRET_NAME!$COGNITO_INFO_SECRET_NAME! taskdef.json
      - sed -ie s/SNS_TOPIC_NAME/$SNS_TOPIC_NAME/ taskdef.json
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_NAME .
      - docker tag $REPOSITORY_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - imageDetail.json
    - taskdef.json